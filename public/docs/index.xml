<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sistemas Distribuidos</title>
    <link>http://localhost:1313/docs/</link>
    <description>Recent content on Sistemas Distribuidos</description>
    <generator>Hugo</generator>
    <language>es-ar</language>
    <lastBuildDate>Tue, 12 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introducción</title>
      <link>http://localhost:1313/docs/01-introduccion/</link>
      <pubDate>Wed, 18 Sep 2024 22:59:19 -0300</pubDate>
      <guid>http://localhost:1313/docs/01-introduccion/</guid>
      <description>&lt;h1 id=&#34;introducción&#34;&gt;&#xA;  Introducción&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#introducci%c3%b3n&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;the #1 rule of distribute computing: Don’t distribute your computing! At least if you can in any way avoid it&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;You&amp;rsquo;re not Google. Your company will never be Google&amp;hellip; Is there a reason we can&amp;rsquo;t just do this all in Postgres?&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Avances imporantes han ocurrido en las últimas décadas:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Desarrollo de microprocesadores potentes, pequeños y ecónomicos.&lt;/li&gt;&#xA;&lt;li&gt;Avance de las tecnologías de comunicaciones.&lt;/li&gt;&#xA;&lt;li&gt;Miniaturización de los sistemas de cómputo (ES, IoT, SoCs, etc).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;En la actualidad es &lt;em&gt;relativamente sencillo&lt;/em&gt; desarrollar un sistema compuesto de múltiples computadoras conectadas por una red.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arquitecturas</title>
      <link>http://localhost:1313/docs/02-arquitectura/</link>
      <pubDate>Wed, 18 Sep 2024 23:02:19 -0300</pubDate>
      <guid>http://localhost:1313/docs/02-arquitectura/</guid>
      <description>&lt;h1 id=&#34;arquitecturas&#34;&gt;&#xA;  Arquitecturas&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#arquitecturas&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Es fundamental una correcta organización para administrar la complejidad de un sistema distribuido.&lt;/p&gt;&#xA;&lt;p&gt;Podemos diferenciar:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;La organización de los componentes de software (&lt;em&gt;arquitectura de software&lt;/em&gt;).&lt;/li&gt;&#xA;&lt;li&gt;Cómo están físicamente instanciados (&lt;em&gt;arquitectura del sistema&lt;/em&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;estilo-arquitectonico&#34;&gt;&#xA;  Estilo arquitectonico&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#estilo-arquitectonico&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Organización lógica de los componentes de software del sistema:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Componentes.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Unidad modular con interfaces bien definidas (reemplazable).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Cómo se conectan y comunican.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Conector: el mecanismo que media la comunicación entre los componentes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Qué datos intercambian.&lt;/li&gt;&#xA;&lt;li&gt;Cómo están configurados.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Según como se configuran componentes y conectores, tenemos una &lt;em&gt;arquitectura de software&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Procesos</title>
      <link>http://localhost:1313/docs/03-procesos/</link>
      <pubDate>Wed, 18 Sep 2024 23:03:01 -0300</pubDate>
      <guid>http://localhost:1313/docs/03-procesos/</guid>
      <description>&lt;h1 id=&#34;procesos&#34;&gt;&#xA;  Procesos&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#procesos&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Hilos, virtualización, cliente/servidor, migración.&lt;/p&gt;&#xA;&lt;h2 id=&#34;procesos-1&#34;&gt;&#xA;  Procesos&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#procesos-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Un proceso ofrece mejor isolación entre tareas.&lt;/p&gt;&#xA;&lt;p&gt;Sobre todo, la protección puede ser asegurada por el hardware.&lt;/p&gt;&#xA;&lt;h2 id=&#34;hilos&#34;&gt;&#xA;  Hilos&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hilos&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Los hilos nos permiten mantener la idea de procesos secuenciales que se bloquean por E/S junto con concurrencia:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Un mismo proceso puede tener multiples hilos, cada uno visto como un programa secuencial.&lt;/li&gt;&#xA;&lt;li&gt;Evita tener que lidiar con callbacks asincrónicos.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;El uso de hilos provee un mejor nivel de granularidad para el desarrollo de aplicaciones distribuidas y provee un mejor nivel de performance.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Protocolos de comunicación</title>
      <link>http://localhost:1313/docs/04-01-protocolos/</link>
      <pubDate>Wed, 18 Sep 2024 23:04:01 -0300</pubDate>
      <guid>http://localhost:1313/docs/04-01-protocolos/</guid>
      <description>&lt;h1 id=&#34;comunicación&#34;&gt;&#xA;  Comunicación&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#comunicaci%c3%b3n&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Fundamental en un sistema distribuido. Las primitivas de comunicación que ofrece el sistema operativo pueden no tener el nivel de abstracción necesario.&lt;/p&gt;&#xA;&lt;h2 id=&#34;fundaciones&#34;&gt;&#xA;  Fundaciones&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#fundaciones&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;el-modelo-osi&#34;&gt;&#xA;  El modelo OSI&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#el-modelo-osi&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Modelo de siete capas, no utilizado en la práctica, pero que es una referencia útil acerca de como esta estructurado lógicamente el stack de comunicación.&lt;/p&gt;&#xA;&lt;h3 id=&#34;middleware&#34;&gt;&#xA;  Middleware&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#middleware&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Los servicios middleware para un sistema distribuido estarían logicamente ubicados en las capas de sesión y presentación del modelo OSI, aunque también pueden incorporar servicios en la capa de aplicación.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RPC</title>
      <link>http://localhost:1313/docs/04-02-rpc/</link>
      <pubDate>Wed, 18 Sep 2024 23:04:01 -0300</pubDate>
      <guid>http://localhost:1313/docs/04-02-rpc/</guid>
      <description>&lt;h1 id=&#34;rpc&#34;&gt;&#xA;  RPC&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#rpc&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Los desarrolladores estan familiarizados con el paradigma procedural. Si un procedimiento esta diseñado de manera que funcione aislado, no hay impedimento en principio que pueda ejecutar en otra maquina.&lt;/p&gt;&#xA;&lt;p&gt;Idea básica de RPC: Permitir invocar funciones remotas como si fueran locales.&lt;/p&gt;&#xA;&lt;p&gt;Idea sencilla pero de implementación compleja. Contribuye a la transparencia de distribución, especialmente a la transparencia de acceso. Problemas: falta de un espacio de direcciones común, diferencia en arquitecturas, caída de alguno de los procesos que se comunican, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MoM</title>
      <link>http://localhost:1313/docs/04-comunicacion-mom/</link>
      <pubDate>Wed, 18 Sep 2024 23:04:02 -0300</pubDate>
      <guid>http://localhost:1313/docs/04-comunicacion-mom/</guid>
      <description>&lt;h1 id=&#34;middleware-orientado-a-mensajes-mom&#34;&gt;&#xA;  Middleware orientado a mensajes (MoM)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#middleware-orientado-a-mensajes-mom&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;RPC o RMI no siempre son apropiados. Ej:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;el receptor no esta funcionando al mismo tiempo que el emisor.&lt;/li&gt;&#xA;&lt;li&gt;no se ajustan a la arquitectura cliente/servidor.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Alternativa: envío de mensajes.&lt;/p&gt;&#xA;&lt;h2 id=&#34;uso-de-sockets&#34;&gt;&#xA;  Uso de sockets&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#uso-de-sockets&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Socket: abstraccion sobre un puerto, donde se puede escribir o leer datos, usando un protocolo específico (ej: TCP o UDP).&lt;/p&gt;&#xA;&lt;p&gt;No presenta el nivel de abstracción necesario. Cualquier funcionalidad adicional debe ser implementada por la aplicación.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multicast</title>
      <link>http://localhost:1313/docs/04-comunicacion-multicast/</link>
      <pubDate>Wed, 18 Sep 2024 23:04:03 -0300</pubDate>
      <guid>http://localhost:1313/docs/04-comunicacion-multicast/</guid>
      <description>&lt;h1 id=&#34;multicast&#34;&gt;&#xA;  Multicast&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#multicast&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;¿Cómo enviar datos a múltiples receptores?&lt;/p&gt;&#xA;&lt;p&gt;Existen numerosas soluciones a nivel de protocoles de red y de transporte. Su principal desventaja es el costo en armar las rutas de difusión de datos.&lt;/p&gt;&#xA;&lt;p&gt;A nivel de aplicación, las redes p2p estructuradas facilitan la creación de estas rutas de difusión. Veremos técnicas de difusión a este nivel.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basada-en-árboles&#34;&gt;&#xA;  Basada en árboles&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#basada-en-%c3%a1rboles&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;La idea básica es que los nodos estan organizados en una red superpuesta, utilizada para difundir los datos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Relojes</title>
      <link>http://localhost:1313/docs/05-01-relojes/</link>
      <pubDate>Wed, 18 Sep 2024 23:05:01 -0300</pubDate>
      <guid>http://localhost:1313/docs/05-01-relojes/</guid>
      <description>&lt;h1 id=&#34;relojes&#34;&gt;&#xA;  Relojes&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#relojes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;En un sistema centralizado &lt;code&gt;x = timestamp(); y = timestamp()&lt;/code&gt; da como resultado \( x \leq y \).&lt;/p&gt;&#xA;&lt;p&gt;En un sistema distribuido, acordar en un valor temporal no es trivial.&lt;/p&gt;&#xA;&lt;p&gt;¿Es posible sincronizar los relojes de los nodos de un sistema distribuido? La respuesta es sorprendentemente complicada.&lt;/p&gt;&#xA;&lt;p&gt;Entonces&amp;hellip; ¿Cómo coordinan sus actividades los procesos de un sistema distribuido?&lt;/p&gt;&#xA;&lt;h2 id=&#34;relojes-físicos&#34;&gt;&#xA;  Relojes físicos&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#relojes-f%c3%adsicos&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Existen situaciones donde es necesario que todos los nodos en un sistema acuerden en un valor de tiempo determinado.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mutex</title>
      <link>http://localhost:1313/docs/05-02-mutex/</link>
      <pubDate>Wed, 18 Sep 2024 23:05:01 -0300</pubDate>
      <guid>http://localhost:1313/docs/05-02-mutex/</guid>
      <description>&lt;h1 id=&#34;exclusión-mutua&#34;&gt;&#xA;  Exclusión mutua&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exclusi%c3%b3n-mutua&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Coordinar el acceso exclusivo a un recurso.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Estrategias:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Mediante permisos: acuerdo entre los procesos.&lt;/li&gt;&#xA;&lt;li&gt;Utilizando un token: quien tiene el token, accede al recurso.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;centralizado&#34;&gt;&#xA;  Centralizado&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#centralizado&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Uso de un coordinador que otorga el acceso al recurso&lt;/li&gt;&#xA;&lt;li&gt;Facil de implementar, sencillo de mantener.&lt;/li&gt;&#xA;&lt;li&gt;Posibles problemas para escalar.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;descentralizado&#34;&gt;&#xA;  Descentralizado&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#descentralizado&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Recurso con N replicas, cada una con un coordinador asignado.&lt;/li&gt;&#xA;&lt;li&gt;Acceder al recurso requiere votos positivos de al menos m &amp;gt; N/2 coordinadores.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;distribuido&#34;&gt;&#xA;  Distribuido&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#distribuido&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Uso de multicast totalmente ordenado para coordinar el acceso.&lt;/li&gt;&#xA;&lt;li&gt;Requiere poder contactar a todos los procesos interesados en el mismo recurso.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;token-ring&#34;&gt;&#xA;  Token ring&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#token-ring&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Procesos organizados en un anillo lógico.&lt;/li&gt;&#xA;&lt;li&gt;Token circula por el anillo.&lt;/li&gt;&#xA;&lt;li&gt;Quien tiene el token puede acceder al recurso.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;comparación&#34;&gt;&#xA;  Comparación&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#comparaci%c3%b3n&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Centralizado:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Requiere 3 mensajes para acceder/liberar el recurso (petición, recepción del ok, liberación).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Distribuido:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Si existen &lt;em&gt;N&lt;/em&gt; nodos, debo envíar mensajes a cada uno y esperar confirmación de ok: &lt;em&gt;2(N-1)&lt;/em&gt; mensajes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Token-ring:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;El token puede recorrer indefinidamente el anillo hasta ser retenido para el acceso al recurso.&lt;/li&gt;&#xA;&lt;li&gt;En el peor caso un nodo debe esperar &lt;em&gt;N-1&lt;/em&gt; mensajes hasta que le llegue el token (suponiendo un anillo de &lt;em&gt;N&lt;/em&gt; nodos)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;ejemplo-exclusion-mutua-con-zookeeper&#34;&gt;&#xA;  Ejemplo: exclusion mutua con Zookeeper&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ejemplo-exclusion-mutua-con-zookeeper&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;En la práctica muchos sistemas distribuidos utilizan un coordinador centralizado&lt;/p&gt;</description>
    </item>
    <item>
      <title>Algoritmos de elección</title>
      <link>http://localhost:1313/docs/05-03-eleccion/</link>
      <pubDate>Wed, 18 Sep 2024 23:05:01 -0300</pubDate>
      <guid>http://localhost:1313/docs/05-03-eleccion/</guid>
      <description>&lt;h1 id=&#34;algoritmos-de-elección&#34;&gt;&#xA;  Algoritmos de elección&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#algoritmos-de-elecci%c3%b3n&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Muchos algoritmos distribuidos requieren que un nodo actue como coordinador.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;No importa en general cual nodo en particular sea el coordinador&amp;hellip; pero alguien tiene que hacerlo.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Mediante un algoritmo de elección se escoje un nodo para que actue como coordinador.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;En general se asume:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cada proceso &lt;em&gt;P&lt;/em&gt; cuenta con un identificador único &lt;em&gt;id(P)&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Cada proceso conoce a todo el conjunto de procesos (aunque no cuales estan funcionando).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;El objetivo de estos algoritmos es que cuando finalice la elección &lt;em&gt;todos&lt;/em&gt; los procesos hayan acordado el mismo lider.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Coordinación mediante rumores</title>
      <link>http://localhost:1313/docs/05-04-agregacion/</link>
      <pubDate>Wed, 18 Sep 2024 23:05:01 -0300</pubDate>
      <guid>http://localhost:1313/docs/05-04-agregacion/</guid>
      <description>&lt;h1 id=&#34;coordinación-basada-en-rumores&#34;&gt;&#xA;  Coordinación basada en rumores&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#coordinaci%c3%b3n-basada-en-rumores&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Se puede utilizar rumores para recolectar información.&lt;/p&gt;&#xA;&lt;h2 id=&#34;ejemplos-de-coordinación&#34;&gt;&#xA;  Ejemplos de coordinación&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ejemplos-de-coordinaci%c3%b3n&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Consensuar un mismo valor:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cada nodo $P_i$ escoge un valor arbitrario $v_i$&lt;/li&gt;&#xA;&lt;li&gt;Cuando dos nodos $P_i$ y $P_j$ intercambian datos: $v_i, v_j \leftarrow (v_i + v_j)/2$&lt;/li&gt;&#xA;&lt;li&gt;Eventualmente todos los nodos tendran el mismo valor (media de los valores iniciales)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Estimar el número de nodos:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;El nodo $P_1$ escoge $v_1=1$, el resto de los nodos $v_i=0$&lt;/li&gt;&#xA;&lt;li&gt;Si hay $N$ nodos, eventualmente todos tendran $v_i=1/N$&lt;/li&gt;&#xA;&lt;li&gt;Se puede estimar el tamaño de la red como $1/v_i$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Seleccionar un nodo al azar:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nombres, identificadores y direcciones</title>
      <link>http://localhost:1313/docs/06-nombres-intro/</link>
      <pubDate>Wed, 18 Sep 2024 23:06:01 -0300</pubDate>
      <guid>http://localhost:1313/docs/06-nombres-intro/</guid>
      <description>&lt;h1 id=&#34;nombres-identificadores-y-direcciones&#34;&gt;&#xA;  Nombres, identificadores y direcciones&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#nombres-identificadores-y-direcciones&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;En el contexto de sistemas distribuidos, vamos a decir que un nombre es un conjunto de bits.&lt;/p&gt;&#xA;&lt;h2 id=&#34;entidades&#34;&gt;&#xA;  Entidades&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#entidades&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;El principal uso de un nombre es permitir identificar una &lt;strong&gt;entidad&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Una &lt;strong&gt;entidad&lt;/strong&gt; puede ser cualquier cosa: una página web, una impresora, un proceso.&lt;/p&gt;&#xA;&lt;p&gt;En general, una entidad se puede &lt;em&gt;operar&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Por ejemplo, si la entidad es una impresora, se puede enviar un documento para su impresión.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;puntos-de-acceso&#34;&gt;&#xA;  Puntos de acceso&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#puntos-de-acceso&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Para operar una entidad se requiere acceder a la misma mediante un &lt;strong&gt;punto de acceso&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nombres planos</title>
      <link>http://localhost:1313/docs/06-nombres-planos/</link>
      <pubDate>Wed, 18 Sep 2024 23:06:02 -0300</pubDate>
      <guid>http://localhost:1313/docs/06-nombres-planos/</guid>
      <description>&lt;h1 id=&#34;nombres-planos&#34;&gt;&#xA;  Nombres planos&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#nombres-planos&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;No contienen información acerca de la entidad, su ubicación o su punto de acceso.&lt;/p&gt;&#xA;&lt;p&gt;En general los &lt;strong&gt;identificadores&lt;/strong&gt; son de este tipo.&lt;/p&gt;&#xA;&lt;p&gt;Ejemplo:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;0b0adad386f3f0836c994e8487c1b470cbb6f682&lt;/code&gt; (suerte con intentar conocer la entidad sin contexto)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;00:26:c7:d9:98:54&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Son sencillos de generar, pero transfieren la complejidad al mecanismo de resolución de nombres.&lt;/p&gt;&#xA;&lt;p&gt;¿Cómo se puede resolver la entidad asociada?&lt;/p&gt;&#xA;&lt;p&gt;Vamos a ver una serie de posibles soluciones simples:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#broadcast&#34;&gt;Broadcast&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#multicast&#34;&gt;Multicast&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#forwarding-pointers&#34;&gt;Forwarding Pointers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#basados-en-hogar-home-based&#34;&gt;Basados en hogar&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;broadcast&#34;&gt;&#xA;  Broadcast&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#broadcast&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Una opción es realizar un &lt;em&gt;broadcast&lt;/em&gt; del identificador.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chord</title>
      <link>http://localhost:1313/docs/06-nombres-planos-chord/</link>
      <pubDate>Wed, 18 Sep 2024 23:06:02 -0300</pubDate>
      <guid>http://localhost:1313/docs/06-nombres-planos-chord/</guid>
      <description>&lt;h1 id=&#34;chord&#34;&gt;&#xA;  Chord&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chord&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Chord_%28peer-to-peer%29&#34;&gt;Chord&lt;/a&gt; es un sistema &lt;a href=&#34;https://en.wikipedia.org/wiki/Distributed_hash_table&#34;&gt;DHT&lt;/a&gt; (Distributed Hash Table) relativamente sencillo de entender, utilizado en redes &lt;a href=&#34;http://localhost:1313/docs/02-arquitectura/#arquitecturas-simétricas&#34;&gt;p2p&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Sistemas similares:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Pastry_%28DHT%29&#34;&gt;Pastry&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Tapestry_%28DHT%29&#34;&gt;Tapestry&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;material-de-lectura&#34;&gt;&#xA;  Material de lectura&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#material-de-lectura&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Estos apuntes estan basados en:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;La sección &lt;em&gt;6.2.3 Distributed Hash tables&lt;/em&gt; del libro &lt;em&gt;Distributed Systems&lt;/em&gt;, donde se describe brevemente Chord. No es necesario leer la nota avanzada, pero sí la subsección &lt;em&gt;Exploiting network proximity&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;En el &lt;a href=&#34;https://pdos.csail.mit.edu/papers/chord:sigcomm01/chord_sigcomm.pdf&#34;&gt;paper original&lt;/a&gt;. Recomendado leer la sección 1 y la sección 4.3 (hasta el Teorema, que no es necesario leer ni entender).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Consistencia</title>
      <link>http://localhost:1313/docs/07-replicacion/07-01-introduccion/</link>
      <pubDate>Wed, 18 Sep 2024 23:04:03 -0300</pubDate>
      <guid>http://localhost:1313/docs/07-replicacion/07-01-introduccion/</guid>
      <description>&lt;h1 id=&#34;introducción&#34;&gt;&#xA;  Introducción&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#introducci%c3%b3n&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;razones-para-replicar&#34;&gt;&#xA;  Razones para replicar&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#razones-para-replicar&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Existen &lt;strong&gt;dos&lt;/strong&gt; razones para replicar:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Incrementar la &lt;strong&gt;confiabilidad&lt;/strong&gt; del sistema&lt;/li&gt;&#xA;&lt;li&gt;Mejorar la &lt;strong&gt;perfomance&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tamaño: incrementar el número de peticiones que se atienden&lt;/li&gt;&#xA;&lt;li&gt;Área geográfica: reducción de lantecias (acercar copias a los clientes)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Todo muy bonito ¿Quién podría estar en contra de replicar?&lt;/p&gt;&#xA;&lt;p&gt;La cruda realidad: hay un &lt;strong&gt;precio que pagar&lt;/strong&gt;, ya que replicar genera &lt;strong&gt;problemas de consistencia&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Cada vez que se modifica una replica, se tienen que actualizar el resto de las copias.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Consistencia centrada en datos</title>
      <link>http://localhost:1313/docs/07-replicacion/07-02-data-centric/</link>
      <pubDate>Wed, 18 Sep 2024 23:04:03 -0300</pubDate>
      <guid>http://localhost:1313/docs/07-replicacion/07-02-data-centric/</guid>
      <description>&lt;h1 id=&#34;modelos-de-consistencia-centrado-en-datos&#34;&gt;&#xA;  Modelos de consistencia centrado en datos&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#modelos-de-consistencia-centrado-en-datos&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;generalidades&#34;&gt;&#xA;  Generalidades&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#generalidades&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Suponer un &lt;em&gt;data store&lt;/em&gt; replicado en varias máquinas (nodos).&lt;/p&gt;&#xA;&lt;p&gt;Un &lt;strong&gt;modelo de consistencia&lt;/strong&gt; es un &lt;strong&gt;contrato&lt;/strong&gt; entre los clientes y el &lt;strong&gt;data store&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Si se respeta el contrato, todos contentos&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Por ejemplo, normalmente un cliente espera que una lectura refleje la última escritura.&lt;/p&gt;&#xA;&lt;p&gt;¿Pero qué es la &lt;strong&gt;última escritura&lt;/strong&gt; en un sistema distribuido?&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;¡No tenemos un reloj global!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Diferentes modelos de consistencia dan una respuesta distinta:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Consistencia centrada en el cliente</title>
      <link>http://localhost:1313/docs/07-replicacion/07-03-client-centric/</link>
      <pubDate>Mon, 14 Oct 2024 23:05:03 -0300</pubDate>
      <guid>http://localhost:1313/docs/07-replicacion/07-03-client-centric/</guid>
      <description>&lt;h1 id=&#34;modelos-de-consistencia-centrados-en-el-cliente&#34;&gt;&#xA;  Modelos de consistencia centrados en el cliente&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#modelos-de-consistencia-centrados-en-el-cliente&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Considerar un data store distribuido donde:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;no existen actualizaciones simultaneas o bien pueden ser fácilmente resueltas.&lt;/li&gt;&#xA;&lt;li&gt;la mayoría de las operaciones son de lectura.&lt;/li&gt;&#xA;&lt;li&gt;modelos de consistencia débil, por ejemplo eventual&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Un data store así funciona bien mientras un cliente se conecte siempre a la misma replica.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Denominado &lt;a href=&#34;https://jepsen.io/consistency&#34;&gt;&lt;em&gt;sticky-availability&lt;/em&gt;&lt;/a&gt; (¿disponibilidad pegajosa?)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Los problemas aparecen si se conectan otra replica en un lapso corto de tiempo&lt;/p&gt;</description>
    </item>
    <item>
      <title>Administración de réplicas</title>
      <link>http://localhost:1313/docs/07-replicacion/07-04-replica-managment/</link>
      <pubDate>Tue, 15 Oct 2024 01:30:03 -0300</pubDate>
      <guid>http://localhost:1313/docs/07-replicacion/07-04-replica-managment/</guid>
      <description>&lt;h1 id=&#34;administración-de-réplicas&#34;&gt;&#xA;  Administración de réplicas&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#administraci%c3%b3n-de-r%c3%a9plicas&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;¿Dónde ubicar las réplicas? Dos aspectos:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Distribución física de los servidores.&lt;/li&gt;&#xA;&lt;li&gt;Distribución del contenido en dichos servidores.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;¿Qué mecanismos utilizar para mantener las replicas (eventualmente) consistentes?&lt;/p&gt;&#xA;&lt;h2 id=&#34;ubicación-física&#34;&gt;&#xA;  Ubicación física&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ubicaci%c3%b3n-f%c3%adsica&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Hoy quiza no tan relevante dada la computación en la nube.&lt;/p&gt;&#xA;&lt;p&gt;Se resume en un problema de optimización.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Seleccionar las mejores $K$ ubicaciones de $M$ posibles ($K &amp;lt; M$)&lt;/li&gt;&#xA;&lt;li&gt;Y por lo tanto, computacionalmente costoso: se aplican heurísticas&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Tipos de criterios para ubicar un servidor:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Protocolos de consistencia</title>
      <link>http://localhost:1313/docs/07-replicacion/07-05-protocolos/</link>
      <pubDate>Thu, 17 Oct 2024 07:30:03 -0300</pubDate>
      <guid>http://localhost:1313/docs/07-replicacion/07-05-protocolos/</guid>
      <description>&lt;h1 id=&#34;protocolos-de-consistencia&#34;&gt;&#xA;  Protocolos de consistencia&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#protocolos-de-consistencia&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Los modelos de consistencia se implementan siguiendo algún protocolo.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basados-en-un-primario&#34;&gt;&#xA;  Basados en un primario&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#basados-en-un-primario&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Utilizados para implementar modelos de consistencia secuencial.&lt;/p&gt;&#xA;&lt;p&gt;Cada item $x$ tiene asociado un &lt;strong&gt;nodo (replica) primario&lt;/strong&gt; en el &lt;em&gt;data store&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Este nodo es responsable de coordinar las operaciones de actualización.&lt;/p&gt;&#xA;&lt;p&gt;Osea, &lt;strong&gt;un unico nodo o replica&lt;/strong&gt; es responsable de realizar las actualizaciones&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Luego las propaga al resto de los nodos, claro.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;El nodo primario puede estar&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tolerancia a fallos</title>
      <link>http://localhost:1313/docs/08-tolerancia/08-01-introduccion/</link>
      <pubDate>Tue, 22 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/08-tolerancia/08-01-introduccion/</guid>
      <description>&lt;h1 id=&#34;introducción-a-la-tolerancia-a-fallos&#34;&gt;&#xA;  Introducción a la tolerancia a fallos&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#introducci%c3%b3n-a-la-tolerancia-a-fallos&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Las &lt;strong&gt;fallas parciales&lt;/strong&gt; son una característica de los sistemas distribuidos.&lt;/p&gt;&#xA;&lt;p&gt;¿Como diseñar los sistemas distribuidos para que se recuperen de este tipo de fallas?&lt;/p&gt;&#xA;&lt;p&gt;Idealmente automáticamente y sin degradar la performance.&lt;/p&gt;&#xA;&lt;h2 id=&#34;tolerancia-a-fallas&#34;&gt;&#xA;  Tolerancia a fallas&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tolerancia-a-fallas&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Relacionado con el concepto de &lt;em&gt;dependable systems&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Algunos terminos:&lt;/p&gt;&#xA;&lt;h3 id=&#34;disponibilidad&#34;&gt;&#xA;  Disponibilidad&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#disponibilidad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Es la probabilidad que el sistema este funcionando en cualquier momento.&lt;/p&gt;&#xA;&lt;h3 id=&#34;confiabilidad&#34;&gt;&#xA;  Confiabilidad&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#confiabilidad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;La probabilidad que el sistema ejecute continuamente sin fallos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Resiliencia de procesos</title>
      <link>http://localhost:1313/docs/08-tolerancia/08-02-resiliencia/</link>
      <pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/08-tolerancia/08-02-resiliencia/</guid>
      <description>&lt;h1 id=&#34;resiliencia-de-procesos&#34;&gt;&#xA;  Resiliencia de procesos&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#resiliencia-de-procesos&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;La falla de un proceso se enmascara replicando el mismo como un grupo de procesos.&lt;/p&gt;&#xA;&lt;h2 id=&#34;grupos-de-procesos&#34;&gt;&#xA;  Grupos de procesos&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#grupos-de-procesos&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;El cliente debe ver al grupo de procesos como una única entidad.&lt;/p&gt;&#xA;&lt;p&gt;Un mensaje enviado al grupo debe ser enviado a cada uno de sus procesos.&lt;/p&gt;&#xA;&lt;p&gt;Los grupos pueden ser dinámicos:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pueden ser creados, modificados, eliminados.&lt;/li&gt;&#xA;&lt;li&gt;Un proceso puede unirse a un grupo o abandonarlo.&lt;/li&gt;&#xA;&lt;li&gt;Un proceso puede ser parte de más de un grupo.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;organización&#34;&gt;&#xA;  Organización&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#organizaci%c3%b3n&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Grupo planos:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comunicación confiable</title>
      <link>http://localhost:1313/docs/08-tolerancia/08-03-comunicacion/</link>
      <pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/08-tolerancia/08-03-comunicacion/</guid>
      <description>&lt;h1 id=&#34;comunicación-confiable&#34;&gt;&#xA;  Comunicación confiable&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#comunicaci%c3%b3n-confiable&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Los enlaces de comunicación &lt;em&gt;también&lt;/em&gt; fallan.&lt;/p&gt;&#xA;&lt;p&gt;Los canales de comunicación pueden experimentar:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Fallas de detención&lt;/li&gt;&#xA;&lt;li&gt;Fallas de omisión (ej: mensajes perdidos)&lt;/li&gt;&#xA;&lt;li&gt;Temporales (ej: imeouts)&lt;/li&gt;&#xA;&lt;li&gt;Fallas arbitrarias (ej: mensajes duplicados)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;comunicación-punto-a-punto&#34;&gt;&#xA;  Comunicación punto a punto&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#comunicaci%c3%b3n-punto-a-punto&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;La comunicación punto a punto puede ser resuelta mediante TCP.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Enmascara fallas de omisión&lt;/li&gt;&#xA;&lt;li&gt;No resuelve fallas de detención.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;semántica-de-rpc-en-caso-de-fallos&#34;&gt;&#xA;  Semántica de RPC en caso de fallos&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#sem%c3%a1ntica-de-rpc-en-caso-de-fallos&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Clases de falla en RPC:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Commit distribuido</title>
      <link>http://localhost:1313/docs/08-tolerancia/08-05-commit-distribuido/</link>
      <pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/08-tolerancia/08-05-commit-distribuido/</guid>
      <description>&lt;h1 id=&#34;commit-distribuido&#34;&gt;&#xA;  Commit distribuido&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#commit-distribuido&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
  </channel>
</rss>
